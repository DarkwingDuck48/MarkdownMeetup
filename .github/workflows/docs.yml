name: Docs CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for proper file discovery

      # Install dependencies
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc python3-pip
          npm install -g @mermaid-js/mermaid-cli @marp-team/marp-cli
          pip install pandoc-mermaid-filter

      # Process Mermaid diagrams
      - name: Convert Mermaid to images
        run: |
          mkdir -p dist/mermaid
          find docs -name "*.md" -exec grep -l "```mermaid" {} \; | while read file; do
            # Create unique output directory per file
            dir_hash=$(echo "$file" | md5sum | cut -c1-8)
            mkdir -p "dist/mermaid/$dir_hash"
            
            # Extract and convert each mermaid block
            awk '/```mermaid/{flag=1; i++; next} /```/{flag=0} flag' "$file" | while read -r code; do
              if [ -n "$code" ]; then
                echo "$code" | mmdc -o "dist/mermaid/$dir_hash/diagram_${i}.png" -w 1600 -H 1200 --scale 2
                sed -i "s|```mermaid.*```|![](mermaid/$dir_hash/diagram_${i}.png)|g" "$file"
              fi
            done
          done

      # Process images and documents
      - name: Process documents
        run: |
          mkdir -p outputs
          
          # Convert individual files
          if [ -d "docs/one_file" ]; then
            for file in docs/one_file/*.md; do
              [ -f "$file" ] || continue
              output_name="outputs/$(basename "$file" .md).docx"
              pandoc "$file" -f markdown -t docx -o "$output_name" \
                --resource-path=.:docs/one_file:dist \
                --extract-media=dist \
                --filter pandoc-mermaid
            done
          fi

          # Create combined document
          if ls docs/sep_files/*.md 1> /dev/null 2>&1; then
            pandoc docs/sep_files/*.md -o outputs/combined.docx \
              --toc \
              --resource-path=.:docs/sep_files:dist \
              --extract-media=dist \
              --metadata-file=docs/meta.yaml \
              --filter pandoc-mermaid
          fi

      # Process presentations
      - name: Generate presentations
        run: |
          mkdir -p outputs/presentations
          for file in slides/*_presentation.md; do
            [ -f "$file" ] || continue
            output_name="outputs/presentations/$(basename "$file" .md).pptx"
            marp "$file" --pptx --output "$output_name" --allow-local-files
          done

      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation-exports
          path: |
            outputs/*.docx
            outputs/*.pdf
            outputs/presentations/*.pptx